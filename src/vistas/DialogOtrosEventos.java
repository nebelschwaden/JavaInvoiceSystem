/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;
import control.Coneccion;
import control.ControlEventos;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import modelo.Evento;
import reporte.GenerarReporte;
/**
 *
 * @author PC
 */
public class DialogOtrosEventos extends javax.swing.JDialog {
    DefaultTableModel modelo;
    ControlEventos ce = new ControlEventos();
    String[] clientData;
    List <Evento> lista;
    
    /**
     * Creates new form DialogOtrosEventos
     */
    
    public DialogOtrosEventos(java.awt.Frame parent, boolean modal,String[] clientData) {
        super(parent, modal);
        initComponents();
        this.clientData=clientData;
        bt.setEnabled(false);
        bt2.setEnabled(false);
        reportB.setEnabled(false);
        jTable1.setDefaultEditor(Object.class, null);
        reportB.setVisible(false);
        setButtons();
        cargarTabla();
        actualizarTabla();
        
    }
    
    public void setButtons(){
        if(clientData!=null){
            bt.setEnabled(false);
            bt.setOpaque(false);
            bt.setContentAreaFilled(false);
            bt.setBorderPainted(false);
            bt.setText("");
            bt.setIcon(null);
        }else{
            bt.setText("Modificar");
            reportB.setVisible(true);
            bt2.setText("");
            bt2.setEnabled(false);
            bt2.setIcon(null);
            bt2.setOpaque(false);
            bt2.setContentAreaFilled(false);
            bt2.setBorderPainted(false);
        }
    }
    
    public void blockearCopyPaste(java.awt.event.KeyEvent evt, JTextField jtf){
        if(evt.getKeyCode()==KeyEvent.VK_CONTROL){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese los datos directamente desde el teclado.");      
            jtf.setText("");
        }
        if(evt.getKeyCode()==KeyEvent.VK_ALT || evt.getKeyCode()==KeyEvent.VK_SHIFT||  jtf.getText().contains("'")  || jtf.getText().contains("@") || jtf.getText().contains("=") || jtf.getText().contains("+") || jtf.getText().contains("*") ){
            evt.consume();
             JOptionPane.showMessageDialog(null, "No ingrese caracteres especiales.");
             jtf.setText("");
        }
        if(jtf.getText().contains("drop database") || jtf.getText().contains("Drop database")|| jtf.getText().contains("DROP DATABASE")){
            evt.consume();
             JOptionPane.showMessageDialog(null, "No sea sapo.");
             jtf.setText("");
        }
     }
    private void cargarTabla(){
        modelo = new DefaultTableModel();
        modelo.addColumn("N°");
        modelo.addColumn("Lugar");
        modelo.addColumn("Equipo 1");
        modelo.addColumn("Equipo 2");
        modelo.addColumn("Fecha");
        modelo.addColumn("Hora");
        jTable1.setModel(modelo);
    }
    
    public void actualizarTabla(){ 
       lista = new ControlEventos().buscarEvento(new Coneccion(), buscartxt.getText());
       cargarTabla();
       for (Evento e : lista) {
            modelo.addRow(new Object[]{e.getIdEvento(),e.getLugar(),e.getEquipo1(),e.getEquipo2(),e.getFecha(),e.getHoraInicio()});     
        }       
       jTable1.revalidate();
       jTable1.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buscartxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        bt2 = new javax.swing.JButton();
        bt = new javax.swing.JButton();
        reportB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Buscar por equipos:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jLabel1, gridBagConstraints);

        buscartxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscartxtKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(buscartxt, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.gridheight = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/returnSmall.png"))); // NOI18N
        jButton1.setText("Atrás");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.insets = new java.awt.Insets(12, 32, 12, 32);
        jPanel1.add(jButton1, gridBagConstraints);

        bt2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ticketIcon.png"))); // NOI18N
        bt2.setText("Siguiente");
        bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(12, 32, 12, 32);
        jPanel1.add(bt2, gridBagConstraints);

        bt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modifyEventIcon.png"))); // NOI18N
        bt.setText("Modificar");
        bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 15, 0);
        jPanel1.add(bt, gridBagConstraints);

        reportB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/addIcon.png"))); // NOI18N
        reportB.setText("Reporte del Evento");
        reportB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 15, 0);
        jPanel1.add(reportB, gridBagConstraints);

        getContentPane().add(jPanel1, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscartxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscartxtKeyReleased
        blockearCopyPaste(evt, buscartxt);
         bt.setEnabled(false);
         bt2.setEnabled(false);
         reportB.setEnabled(false);
//        new Thread(new Runnable(){
//            @Override
//            public void run() {
//                try {
                   actualizarTabla();
//                    Thread.sleep(2000);
//                } catch (InterruptedException ex) {
//                    Logger.getLogger(DialogOtrosEventos.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//           
//       }).start();
    }//GEN-LAST:event_buscartxtKeyReleased

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        if(jTable1.getSelectedRow()>=0 && clientData!=null){
            bt2.setEnabled(true);
        }else{
            bt2.setEnabled(false);
        }
        if(jTable1.getSelectedRow()>=0 && clientData==null){
            bt.setEnabled(true);
        }else{
            bt.setEnabled(false);
        }
            
        if(jTable1.getSelectedRow()>=0 && clientData==null){
            reportB.setEnabled(true);
        }else{
            reportB.setEnabled(false);
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt2ActionPerformed
        String idEvento = (modelo.getValueAt(jTable1.getSelectedRow(), 0).toString());
        new DialogInfoEvento(null, true,Integer.parseInt(idEvento), Integer.parseInt(clientData[11])).setVisible(true);
    }//GEN-LAST:event_bt2ActionPerformed

    private void btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActionPerformed
 
        String idEvento = (modelo.getValueAt(jTable1.getSelectedRow(), 0).toString());
       this.dispose();
        new DialogCrearEvento(null,true, false,Integer.parseInt(idEvento)).setVisible(true);
        
    }//GEN-LAST:event_btActionPerformed

    private void reportBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportBActionPerformed
        Coneccion prob = new Coneccion();
        prob.crearConeccion();
        if(prob.getConeccion()!=null){
        String idEv = (modelo.getValueAt(jTable1.getSelectedRow(), 0).toString());
        GenerarReporte re= new GenerarReporte();
        re.reporte(Integer.parseInt(idEv));
        this.dispose();}
        else{
            JOptionPane.showMessageDialog(null, "No se pudo establecer una conección.");
            System.exit(0);
                    
        }
    }//GEN-LAST:event_reportBActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt;
    private javax.swing.JButton bt2;
    private javax.swing.JTextField buscartxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton reportB;
    // End of variables declaration//GEN-END:variables
}